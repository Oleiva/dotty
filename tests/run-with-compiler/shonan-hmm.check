dafd
Complex(0,10)
Complex(1.*(4).-(2.*(2)), 1.*(2).+(2.*(4)))
List(Complex(2,0), Complex(-4,4), Complex(-2,6))
((vout: scala.Array[Complex[scala.Int]], v1: scala.Array[Complex[scala.Int]], v2: scala.Array[Complex[scala.Int]]) => {
  val n: scala.Int = vout.length
  scala.Predef.intWrapper(0).until(n).foreach[scala.Unit](((i: scala.Int) => vout.update(i, Complex.apply[scala.Int](v1.apply(i).re.*(v2.apply(i).re).-(v1.apply(i).im.*(v2.apply(i).im)), v1.apply(i).re.*(v2.apply(i).im).+(v1.apply(i).im.*(v2.apply(i).re))))))
})
List(25, 30, 20, 43, 44)



((vout: scala.Array[scala.Int], a: scala.Array[scala.Array[scala.Int]], v: scala.Array[scala.Int]) => {
  val n: scala.Int = vout.length
  val m: scala.Int = v.length
  scala.Predef.intWrapper(0).until(n).foreach[scala.Unit](((i: scala.Int) => vout.update(i, {
    var sum: scala.Int = 0
    scala.Predef.intWrapper(0).until(m).foreach[scala.Unit](((i: scala.Int) => sum = sum.+(v.apply(i).*(a.apply(i).apply(i)))))
    (sum: scala.Int)
  })))
})



((vout: scala.Array[scala.Int], a: scala.Array[scala.Array[scala.Int]], v: scala.Array[scala.Int]) => {
  dotty.DottyPredef.assert(3.==(vout.length).&&(2.==(v.length)))
  vout.update(0, 0.+(v.apply(0).*(a.apply(0).apply(0))).+(v.apply(1).*(a.apply(0).apply(1))))
  vout.update(1, 0.+(v.apply(0).*(a.apply(1).apply(0))).+(v.apply(1).*(a.apply(1).apply(1))))
  vout.update(2, 0.+(v.apply(0).*(a.apply(2).apply(0))).+(v.apply(1).*(a.apply(2).apply(1))))
})



{
  val arr: scala.Array[scala.Array[scala.Int]] = scala.Array.apply[scala.Array[scala.Int]](scala.Array.apply(5, 0, 0, 5, 0), scala.Array.apply(0, 0, 10, 0, 0), scala.Array.apply(0, 10, 0, 0, 0), scala.Array.apply(0, 0, 2, 3, 5), scala.Array.apply(0, 0, 3, 0, 7))(scala.reflect.ClassTag.apply[scala.Int](java.lang.Integer.TYPE).wrap)

  ((vout: scala.Array[scala.Int], v: scala.Array[scala.Int]) => {
    dotty.DottyPredef.assert(5.==(vout.length).&&(5.==(v.length)))
    vout.update(0, 0.+(v.apply(0).*(5)).+(v.apply(1).*(0)).+(v.apply(2).*(0)).+(v.apply(3).*(5)).+(v.apply(4).*(0)))
    vout.update(1, 0.+(v.apply(0).*(0)).+(v.apply(1).*(0)).+(v.apply(2).*(10)).+(v.apply(3).*(0)).+(v.apply(4).*(0)))
    vout.update(2, 0.+(v.apply(0).*(0)).+(v.apply(1).*(10)).+(v.apply(2).*(0)).+(v.apply(3).*(0)).+(v.apply(4).*(0)))
    vout.update(3, 0.+(v.apply(0).*(0)).+(v.apply(1).*(0)).+(v.apply(2).*(2)).+(v.apply(3).*(3)).+(v.apply(4).*(5)))
    vout.update(4, 0.+(v.apply(0).*(0)).+(v.apply(1).*(0)).+(v.apply(2).*(3)).+(v.apply(3).*(0)).+(v.apply(4).*(7)))
  })
}
